import org.gradle.internal.jvm.Jvm

plugins {
    id 'java'
    id 'application'
    id 'c'
}

mainClassName = 'emu/Main'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

application {
    applicationDefaultJvmArgs = ["-Djava.library.path=" + file("${buildDir}/libs/lib65816/shared").absolutePath]
}

model {
    platforms {
        // x64 {
        //     architecture "x86_64"
        // }
        arm64 {
            architecture "arm64"
        }
    }

    components {
        lib65816(NativeLibrarySpec) {
					sources {
						c {
							source {
								srcDir "src/lib65816/c"
								include "**/*.c"
							}
						}
					}
            targetPlatform "arm64"
            binaries.all {
                def jvmHome = Jvm.current().javaHome
                if (targetPlatform.operatingSystem.macOsX) {
                    cCompiler.args '-I', "${jvmHome}/include"
                    cCompiler.args '-I', "${jvmHome}/include/darwin"
                    cCompiler.args '-mmacosx-version-min=10.9'
                    linker.args '-mmacosx-version-min=10.9'
                    //linker.args '-stdlib=libc++'
									  //linker.args '-L/usr/local/lib'
									  //linker.args '-ljvm'
                } else if (targetPlatform.operatingSystem.linux) {
                    cCompiler.args '-I', "${jvmHome}/include"
                    cCompiler.args '-I', "${jvmHome}/include/linux"
                    cCompiler.args '-D_FILE_OFFSET_BITS=64'
                } else if (targetPlatform.operatingSystem.windows) {
                    cCompiler.args "-I${jvmHome}/include"
                    cCompiler.args "-I${jvmHome}/include/win32"
                } else if (targetPlatform.operatingSystem.freeBSD) {
                    cCompiler.args '-I', "${jvmHome}/include"
                    cCompiler.args '-I', "${jvmHome}/include/freebsd"
                }
            }
        }
    }
}

classes.dependsOn 'lib65816SharedLibrary'
